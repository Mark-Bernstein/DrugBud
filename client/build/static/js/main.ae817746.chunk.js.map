{"version":3,"sources":["images/drugglerBackgroundImage.jpeg","utils/Auth.js","components/HomePage.js","components/Routes.js","components/LoginForm.js","utils/API.js","pages/Login.js","pages/LogoutFunction.js","components/SignUpForm.js","pages/Signup.js","components/Dashboard.js","pages/DashboardPage.js","pages/Search2.0.js","components/DrugModal.js","components/ActiveDrugs.js","components/AddDrug.js","App.js","registerServiceWorker.js","index.js","images/pillsIcon.png"],"names":["module","exports","__webpack_require__","p","Auth","token","localStorage","setItem","getItem","removeItem","HomePage","props","useEffect","toggleAuthenticateStatus","classes","makeStyles","signUp","background","borderRadius","border","color","fontWeight","height","padding","boxShadow","login","label","textTransform","homePageButtonDiv","backgroundColor","useStyles","react_default","a","createElement","className","style","paddingBottom","src","DrugglerImage","width","maxWidth","isUserAuthenticated","Card","fontSize","Button","root","size","variant","component","RouterLink","to","PrivateRoute","_ref","Component","rest","Object","objectWithoutProperties","react_router","assign","render","pathname","state","from","location","LoggedOutRoute","_ref2","PropsRoute","_ref3","LoginForm","onSubmit","onChange","errors","successMessage","user","action","summary","TextField_default","floatingLabelText","name","errorText","email","value","type","password","RaisedButton_default","danger","react_router_dom","API","userData","axios","post","dashboard","get","headers","Authorization","concat","getDrugsConflict","queryRes","getDrugsID","search","saveDrug","drugData","getUser","id","saveDrugtoUser","drug","put","getAllUserDrugs","removeDrug","delete","drugTaken","newTime","LoginPage","history","_useState","useState","_useState2","slicedToArray","setErrors","_useState3","_useState4","setSuccessMessage","_useState5","_useState6","setUser","storedMessage","components_LoginForm","event","preventDefault","then","res","authenticateUser","data","push","catch","response","message","_event$target","target","objectSpread","defineProperty","LogoutFunction","deauthenticateUser","SignUpForm","primary","SignUpPage","components_SignUpForm","Dashboard","secretData","title","subtitle","React","theme","_drugConflict","_high","flexGrow","spacing","textAlign","fontFamily","drugRes","drugConflict","btn","shadows","align","overflow","gridBtn","input","high","deleteButton","SearchV2","setSearch","drugs","setDrugs","conflicts","setConflicts","_useState7","_useState8","conflicts2","setConflicts2","loadDrugs","toConsumableArray","length","idGroup","rxcui","rxnormId","err","console","log","loadConflicts","finalAPICall","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","return","interaction","fullInteractionTypeGroup","fullInteractionType","severityRes","simpleInteraction","text","holder","holder2","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","interactionPair","severity","threat","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","description","handleDelete","e","getAttribute","filter","Grid","container","item","xs","direction","justify","inputField","TextField_TextField","trim","onClick","document","getElementById","focus","map","Paper","key","delete_default","conflict2","conflict","rand","Math","round","random","getModalStyle","top","left","transform","paper","position","palette","button","SimpleModal","_React$useState","modalStyle","handleOpen","Modal","aria-labelledby","aria-describedby","open","onClose","handleClose","handleInputChange","fullWidth","handleFormSubmit","ActiveDrugs","_addDrug","quarterOne","quarterTwo","quarterThree","quarterFour","eatNow","foo","addDrug","pillGrid2","black","pillGridCell","x","currentQuarter","Table","pillGrid3","TableCell","lastTakenDate","lastTakenTime","frequency","handleDrugRemove","check_default","handleDrugTaken","moment","require","title2","margin","title3","removeCheckbox","displayRowCheckbox","modal","AddDrug","drugDetails","setDrugDetails","setOpen","allDrugs","setAllDrugs","_useState9","_useState10","addedDrug","setAddedDrug","_useState11","_useState12","drugQuarter","setDrugQuarter","asyncToGenerator","regenerator_default","mark","_callee","currentUser","currentDrugs","finalDrugArray","wrap","_context","prev","getToken","sent","_id","updatingallDrugs","stop","apply","this","arguments","loadData","count","handleLastTakenBtn","timeArray","format","split","currentDate","currentTimeArray","presentHourMin","getDrugTime","_callee2","drugT","allFutureDrug","_context2","combinedTime","parseInt","prediction","futureTimeCalcuation","abrupt","_x","compareTime","_callee3","currentTime","myFutureTime","_context3","quarterOneMet","isBefore","quarterTwoMet","isBetween","quarterThreeMet","quarterFourMet","timesUp","_x2","_ref4","_callee4","drugsData","finalDrugs","_context4","index","_x3","initialTime","quarterFreq","hourToMinConverter","futurePrediction","firstQuarter","momentCalculation","secondQuarter","thirdQuarter","takeNow","time","add","hour","min","floor","components_ActiveDrugs","user_id","_e$target","App","authenticated","setAuthenticate","MuiThemeProvider_default","muiTheme","getMuiTheme","PillsIcon","alt","marginTop","Routes_PropsRoute","exact","path","Routes_PrivateRoute","Routes_LoggedOutRoute","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","src_App","URL","process","origin","addEventListener","fetch","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ae817746.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/drugglerBackgroundImage.3aeb39e2.jpeg\";","class Auth {\n\n    /**\n     * Authenticate a user. Save a token string in Local Storage\n     *\n     * @param {string} token\n     */\n    static authenticateUser(token) {\n      localStorage.setItem('token', token);\n    }\n  \n    /**\n     * Check if a user is authenticated - check if a token is saved in Local Storage\n     *\n     * @returns {boolean}\n     */\n    static isUserAuthenticated() {\n      return localStorage.getItem('token') !== null;\n    }\n  \n    /**\n     * Deauthenticate a user. Remove a token from Local Storage.\n     *\n     */\n    static deauthenticateUser() {\n      localStorage.removeItem('token');\n    }\n  \n    /**\n     * Get a token value.\n     *\n     * @returns {string}\n     */\n  \n    static getToken() {\n      return localStorage.getItem('token');\n    }\n  \n  }\n  \n  export default Auth;","import React, { useEffect } from 'react';\nimport { Card, CardText } from 'material-ui/Card';\nimport Auth from '../utils/Auth';\nimport Button from \"@material-ui/core/Button\";\nimport { Link as RouterLink } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DrugglerImage from '../images/drugglerBackgroundImage.jpeg';\n\nconst HomePage = (props) => {\n\n  useEffect(() => {\n    props.toggleAuthenticateStatus();\n  }, [])\n\n  const useStyles = makeStyles({\n    signUp: {\n      background: 'linear-gradient(180deg, seagreen 100%, black 10%)',\n      borderRadius: 60,\n      border: 0,\n      color: 'white',\n      fontWeight: '800',\n      height: 48,\n      padding: '30px 30px',\n      boxShadow: '3px 30px 5px 2px rgba(255, 105, 135, .8)',\n    },\n    login: {\n      background: 'linear-gradient(180deg, #23395d 100%, black 10%)',\n      borderRadius: 60,\n      border: 0,\n      color: 'white',\n      fontWeight: '800',\n      height: 48,\n      padding: '30px 30px',\n      boxShadow: '3px 30px 5px 2px rgba(255, 105, 135, .8)',\n    },\n    label: {\n      textTransform: 'capitalize',\n    },\n    homePageButtonDiv: {\n      backgroundColor: 'black'\n    }\n  });\n\n  const classes = useStyles();\n\n  return (\n    <div className=\"container\">\n      <div>\n        <h1 style={{ color: '#23395d', paddingBottom: '50px' }}>\n          Welcome to Druggler!\n        </h1>\n        <h2 style={{ color: '#23395d' }}>\n          Having trouble juggling all of your drugs?  Try Druggler!\n        </h2>\n        <img\n          src={DrugglerImage}\n          height=\"30%\"\n          width=\"50%\"\n          style={{ borderRadius: \"100%\", maxWidth: \"300px\", height: \"200px\" }}\n        ></img>\n        <hr></hr>\n        <h3 style={{ color: '#23395d' }}>\n          Don't have an account? Sign up!\n        </h3>\n      </div>\n      {Auth.isUserAuthenticated() ? (\n        <CardText style={{ fontSize: '16px', color: 'green' }}>Welcome! You are logged in.</CardText>\n      ) : (\n          <div>\n            <CardText style={{ fontSize: '16px', color: 'green' }}>You are not logged in.</CardText>\n            <Card className=\"container\">\n\n            </Card>\n            <Button\n              classes={{ root: classes.login, label: classes.label }}\n              size=\"large\"\n              variant=\"contained\"\n              component={RouterLink} to=\"/login\"\n              style={{ width: \"30%\" }}\n            >\n              Login\n                </Button>\n\n            <Button\n              size=\"large\"\n              classes={{ root: classes.signUp, label: classes.label }}\n              variant=\"contained\"\n              component={RouterLink} to=\"/signup\"\n              style={{ width: \"30%\" }}\n            >\n              Sign up\n                </Button>\n          </div>\n        )}\n    </div>\n  )\n\n};\n\nexport default HomePage;","import React from \"react\";\n\nimport Auth from '../utils/Auth';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={props => (\n    Auth.isUserAuthenticated() ? (\n      <Component {...props} {...rest} />\n    ) : (\n        <Redirect to={{\n          pathname: '/',\n          state: { from: props.location }\n        }} />\n      )\n  )} />\n)\n\nconst LoggedOutRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={props => (\n    Auth.isUserAuthenticated() ? (\n      <Redirect to={{\n        pathname: '/',\n        state: { from: props.location }\n      }} />\n    ) : (\n        <Component {...props} {...rest} />\n      )\n  )} />\n)\n\nconst PropsRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={props => (\n    <Component {...props} {...rest} />\n  )} />\n)\n\nexport { PrivateRoute, LoggedOutRoute, PropsRoute };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Card, CardText } from 'material-ui/Card';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport TextField from 'material-ui/TextField';\nimport '../css/login.css';\n\nconst LoginForm = ({\n  onSubmit,\n  onChange,\n  errors,\n  successMessage,\n  user,\n  toggleAuthenticateStatus\n}) => (\n    <Card className=\"container\">\n      <form action=\"/\" onSubmit={onSubmit}>\n        <h2 className=\"card-heading\">Login</h2>\n\n        {successMessage && <p className=\"success-message\">{successMessage}</p>}\n        {errors.summary && <p className=\"error-message\">{errors.summary}</p>}\n\n        <div className=\"field-line\">\n          <TextField\n            floatingLabelText=\"Email\"\n            name=\"email\"\n            errorText={errors.email}\n            onChange={onChange}\n            value={user.email}\n          />\n        </div>\n\n        <div className=\"field-line\">\n          <TextField\n            floatingLabelText=\"Password\"\n            type=\"password\"\n            name=\"password\"\n            onChange={onChange}\n            errorText={errors.password}\n            value={user.password}\n          />\n        </div>\n\n        <div className=\"button-line\">\n          <RaisedButton\n            className=\"raised-button\"\n            type=\"submit\"\n            label=\"Log in\"\n            danger\n          />\n        </div>\n\n        <CardText>Don't have an account? <Link to={'/signup'}>Create one</Link>.</CardText>\n      </form>\n    </Card>\n  );\n\nLoginForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  successMessage: PropTypes.string.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nexport default LoginForm;","import axios from \"axios\";\n\n//methods for interacting with API Auth routes\nexport default {\n   login: userData =>\n      axios.post(\"/auth/login\", userData),\n   signUp: userData =>\n      axios.post('/auth/signup', userData),\n   dashboard: token =>\n      axios.get('/api/dashboard', { headers: { Authorization: `bearer ${token}` } }),\n   getDrugsConflict: (queryRes,token) =>\n      axios.get(`https://rxnav.nlm.nih.gov/REST/interaction/list.json?rxcuis=${queryRes}`, { headers: { Authorization: `bearer ${token}` } }),\n   getDrugsID: (search,token) =>\n      axios.get(`https://rxnav.nlm.nih.gov/REST/rxcui?name=${search}`, { headers: { Authorization: `bearer ${token}` } }),\n   saveDrug: (drugData, token)=> \n      axios.post(\"/api/drugs\", drugData, { headers: { Authorization: `bearer ${token}` } }),\n   getUser: (id, token)  =>\n      axios.get(\"/api/user/\" + id, { headers: { Authorization: `bearer ${token}` } }),\n   saveDrugtoUser: (drug, token) => \n      axios.put(\"api/user\", drug, { headers: { Authorization: `bearer ${token}` } }),\n   getAllUserDrugs: (id, token) =>\n      axios.get(\"api/user/drugs/\" + id,{ headers: { Authorization: `bearer ${token}` } }),\n   removeDrug: (id, token) => \n      axios.delete (\"api/drugs/\" + id, { headers: { Authorization: `bearer ${token}` } }),\n   drugTaken: (id, newTime, token) => \n      axios.put(\"api/drugs/\" + id, newTime, { headers: { Authorization: `bearer ${token}` } })\n};\n","import React, { useState, useEffect } from 'react';\nimport Auth from '../utils/Auth';\nimport LoginForm from '../components/LoginForm.js';\nimport API from '../utils/API';\n\nconst LoginPage = ({ history, toggleAuthenticateStatus }) => {\n  // set the initial component state\n  const [errors, setErrors] = useState({});\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\"\n  })\n\n  useEffect(() => {\n    const storedMessage = localStorage.getItem('successMessage');\n    let successMessage = '';\n\n    if (storedMessage) {\n      successMessage = storedMessage;\n      localStorage.removeItem('successMessage');\n    }\n    setSuccessMessage(successMessage);\n\n    return function cleanUp() {\n      setErrors({});\n    }\n  }, [])\n\n\n\n  /**\n   * Process the form.\n   *\n   * @param {object} event - the JavaScript event object\n   */\n  const processForm = event => {\n    // prevent default action. in this case, action is the form submission event\n    event.preventDefault();\n\n    // create a string for an HTTP body message\n    const { email, password } = user;\n\n    API.login({ email, password }).then(res => {\n      // save the token\n      Auth.authenticateUser(res.data.token);\n\n      // update authenticated state\n      toggleAuthenticateStatus()\n\n      // redirect signed in user to dashboard\n      history.push('/dashboard');\n\n    }).catch(({ response }) => {\n\n      const errors = response.data.errors ? response.data.errors : {};\n      errors.summary = response.data.message;\n\n      setErrors(errors);\n    });\n\n  }\n\n  /**\n   * Change the user object.\n   *\n   * @param {object} event - the JavaScript event object\n   */\n  const changeUser = event => {\n    const { name, value } = event.target;\n    setUser({ ...user, [name]: value });\n  }\n\n  /**\n   * Render the component.\n   */\n\n  return (\n    <LoginForm\n      onSubmit={processForm}\n      onChange={changeUser}\n      errors={errors}\n      successMessage={successMessage}\n      user={user}\n    />\n  );\n\n\n}\n\n\n\nexport default LoginPage;","import React, { useEffect } from 'react';\n// import PropTypes from 'prop-types';\nimport Auth from '../utils/Auth';\n\n\nconst LogoutFunction = ({ history }) => {\n\n  useEffect(() => {\n    // deauthenticate user\n    Auth.deauthenticateUser();\n    // change the current URL to / after logout\n    history.push('/');\n  }, [])\n\n\n  return (\n    <div>\n      <p>Logging out...</p>\n    </div>\n  )\n\n}\n\n// LogoutFunction.contextTypes = {\n//   router: PropTypes.object.isRequired\n// };\n\nexport default LogoutFunction;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Card, CardText } from 'material-ui/Card';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport TextField from 'material-ui/TextField';\n\nconst SignUpForm = ({\n  onSubmit,\n  onChange,\n  errors,\n  user,\n}) => (\n    <Card className=\"container\">\n      <form action=\"/\" onSubmit={onSubmit}>\n        <h2 className=\"card-heading\">Sign Up</h2>\n\n        {errors.summary && <p className=\"error-message\">{errors.summary}</p>}\n\n        <div className=\"field-line\">\n          <TextField\n            floatingLabelText=\"Name\"\n            name=\"name\"\n            errorText={errors.name}\n            onChange={onChange}\n            value={user.name}\n          />\n        </div>\n\n        <div className=\"field-line\">\n          <TextField\n            floatingLabelText=\"Email\"\n            name=\"email\"\n            errorText={errors.email}\n            onChange={onChange}\n            value={user.email}\n          />\n        </div>\n\n        <div className=\"field-line\">\n          <TextField\n            floatingLabelText=\"Password\"\n            type=\"password\"\n            name=\"password\"\n            onChange={onChange}\n            errorText={errors.password}\n            value={user.password}\n          />\n        </div>\n\n        <div className=\"button-line\">\n          <RaisedButton type=\"submit\" label=\"Create New Account\" primary />\n        </div>\n\n        <CardText>Already have an account? <Link to={'/login'}>Log in</Link></CardText>\n      </form>\n    </Card>\n  );\n\nSignUpForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nexport default SignUpForm;","import React, { useState } from 'react';\nimport SignUpForm from '../components/SignUpForm';\nimport API from '../utils/API';\n\nconst SignUpPage = ({ history }) => {\n  // set the initial component A\n  const [errors, setErrors] = useState({});\n  const [user, setUser] = useState({\n    email: \"\",\n    name: \"\",\n    password: \"\"\n  })\n\n\n  /**\n   * Process the form.\n   *\n   * @param {object} event - the JavaScript event object\n   */\n  const processForm = event => {\n    // prevent default action. in this case, action is the form submission event\n    event.preventDefault();\n\n    // create a string for an HTTP body message\n    const { name, email, password } = user;\n\n    //const formData = `email=${email}&password=${password}`;\n    API.signUp({ name, email, password }).then(res => {\n      // change the component-container state\n      // set a message\n      localStorage.setItem('successMessage', res.data.message);\n\n      // redirect user after sign up to login page\n      history.push('/login');\n      setErrors({});\n\n    }).catch(({ response }) => {\n\n      const errors = response.data.errors ? response.data.errors : {};\n      errors.summary = response.data.message;\n\n      setErrors({ ...errors, errors });\n    });\n  }\n\n  /**\n   * Change the user object.\n   *\n   * @param {object} event - the JavaScript event object\n   */\n  const changeUser = event => {\n    const { name, value } = event.target;\n    setUser({ ...user, [name]: value });\n  }\n\n  /**\n   * Render the component.\n   */\n\n  return (\n    <SignUpForm\n      onSubmit={processForm}\n      onChange={changeUser}\n      errors={errors}\n      user={user}\n    />\n  );\n\n\n}\n\n\n\nexport default SignUpPage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardTitle, CardText } from 'material-ui/Card';\n\nconst Dashboard = ({ secretData, user }) => (\n  <Card className=\"container\">\n    <CardTitle\n      title=\"Dashboard\"\n      subtitle=\"\"\n    />\n    {secretData && <CardText style={{ fontSize: '16px', color: 'green' }}>Welcome <strong>{user.name}</strong>!<br />{secretData}</CardText>}\n  </Card>\n);\n\nDashboard.propTypes = {\n  secretData: PropTypes.string.isRequired\n};\n\nexport default Dashboard;","import React from 'react';\nimport Auth from '../utils/Auth';\nimport Dashboard from '../components/Dashboard';\nimport API from '../utils/API';\n\nclass DashboardPage extends React.Component {\n  state = {\n    secretData: '',\n    user: {}\n  }\n\n  /**\n   * This method will be executed after initial rendering.\n   */\n  componentDidMount() {\n    API.dashboard(Auth.getToken())\n      .then(res => {\n        this.setState({\n          secretData: res.data.message,\n          user: res.data.user\n        });\n      })\n  }\n\n  /**\n   * Render the component.\n   */\n  render() {\n    return (\n      <div>\n        <Dashboard\n          secretData={this.state.secretData}\n          user={this.state.user}\n        />\n      </div>\n\n    );\n  }\n\n}\n\nexport default DashboardPage;","import React, { useState } from \"react\";\nimport API from \"../utils/API\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport TrashIcon from \"material-ui/svg-icons/action/delete\";\nimport { ConnectionStates } from \"mongoose\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  title: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    backgroundColor: \"#23395d\",\n    color: \"white\",\n    fontWeight: \"800\",\n    fontFamily: \"Constantia\"\n  },\n  drugRes: {\n    padding: \"0\",\n    textAlign: \"left\",\n    color: \"black\",\n    fontWeight: \"bold\",\n    fontSize: \"14px\",\n    width: \"auto\",\n    variant: \"outlined\",\n    backgroundColor: \"lightgreen\",\n    border: \"0.1rem solid\",\n  },\n  drugConflict: {\n    padding: \"0\",\n    textAlign: \"left\",\n    color: \"black\",\n    fontWeight: \"bold\",\n    fontSize: \"14px\",\n    padding: \"10px\",\n    variant: \"outlined\",\n    backgroundColor: \"lightgreen\",\n    border: \"0.1rem solid\",\n  },\n  btn: {\n    border: \"2px solid seagreen\",\n    boxShadow: theme.shadows[5],\n    borderRadius: \"30px\",\n    textAlign: \"center\",\n    backgroundColor: \"#23395d\",\n    color: \"white\",\n    fontWeight: \"400\",\n    align: \"left\",\n    overflow: \"auto\",\n    fontFamily: \"Constantia\"\n  },\n  gridBtn: {\n    padding: \"30px\",\n    overflow: \"auto\"\n  },\n  input: {\n    width: \"100%\"\n  },\n  high: {\n    backgroundColor: \"#ff0000\",\n    textAlign: \"center\",\n    overflow: \"auto\",\n    padding: \"10px\",\n    borderRadius: \"30px\",\n    textAlign: \"center\",\n    color: \"black\",\n    fontWeight: \"400\",\n    fontFamily: \"Constantia\",\n    border: \"1.65mm ridge rgba(0, 0, 0, .8)\"\n  },\n  deleteButton: {\n    textAlign: \"center\",\n    overflow: \"auto\",\n    height: \"30px\",\n    width: \"30px\"\n    // border: \"1mm ridge rgba(200, 200, 200, .8)\"\n  }\n}));\n\nexport default function SearchV2() {\n  const classes = useStyles();\n  const [search, setSearch] = useState({});\n  const [drugs, setDrugs] = useState([]);\n  const [conflicts, setConflicts] = useState([]);\n  const [conflicts2, setConflicts2] = useState([]);\n\n  // fluconazole astemizole cisapride disopyramide\n\n  const addDrug = e => {\n    e.preventDefault();\n    loadDrugs(search);\n    document.getElementById(\"drugTextField\").value = \"\";\n    document.getElementById(\"drugTextField\").focus();\n  };\n\n  const loadDrugs = search => {\n    API.getDrugsID(search)\n      .then(res => {\n        setDrugs([\n          ...drugs,\n          {\n            id: drugs.length,\n            name: res.data.idGroup.name,\n            rxcui: res.data.idGroup.rxnormId\n          }\n        ]);\n      })\n      .catch(err => console.log(err));\n  };\n\n  const fetchConflict = e => {\n    e.preventDefault();\n    loadConflicts();\n  };\n\n  const loadConflicts = () => {\n    let finalAPICall = \"\";\n    for (let element of drugs) {\n      finalAPICall += element.rxcui[0] + \"+\";\n      // maybe have a line that stops \"+\" at the last one?\n    }\n    API.getDrugsConflict(finalAPICall)\n      .then(res => {\n        const interaction =\n          res.data.fullInteractionTypeGroup[1].fullInteractionType;\n        let severityRes = {};\n\n        const simpleInteraction =\n          res.data.fullInteractionTypeGroup[0].fullInteractionType;\n        let text = {};\n\n        const results =\n          res.data.fullInteractionTypeGroup;\n\n        let holder = [];\n        let holder2 = [];\n\n        for (let index of interaction) {\n          severityRes = index.interactionPair[0].severity;\n          holder.push({\n            id: interaction.length,\n            threat: severityRes\n          });\n        }\n\n        for (let index of simpleInteraction) {\n          text = index.interactionPair[0].description\n          holder2.push({\n            id: simpleInteraction.length,\n            description: text\n          });\n        }\n        setConflicts(holder);\n        setConflicts2(holder2)\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  const handleDelete = e => {\n    const name = e.target.getAttribute(\"name\");\n    setDrugs(drugs.filter(drug => drug.name !== name));\n  };\n\n  return (\n    <div>\n      <Grid container spacing={12}>\n        <Grid item xs={12} container direction=\"column\" justify=\"center\">\n          <div className={classes.title}>\n            <h1>Check Drug Interactions</h1>\n            {/* <p>Add two or more drugs to see their interactions.</p> */}\n          </div>\n        </Grid>\n        <Grid item xs={2}></Grid>\n        <Grid item xs={8}>\n          <p>Add two or more drugs to see their interactions.</p>\n        </Grid>\n        <Grid item xs={2}></Grid>\n\n        <Grid item xs={2}></Grid>\n        <Grid item xs={7}>\n          <div className={classes.inputField}>\n            <TextField\n              id=\"drugTextField\"\n              className={classes.input}\n              type=\"text\"\n              label=\"Enter drug name here\"\n              variant=\"filled\"\n              onChange={e => setSearch(e.target.value.trim())}\n            ></TextField>\n          </div>\n        </Grid>\n        <Grid item xs={2}>\n          <div className={classes.inputField}>\n            <Button\n              className={classes.btn}\n              type=\"button\"\n              onClick={addDrug}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Add Drug\n            </Button>\n          </div>\n        </Grid>\n        <Grid item xs={1}></Grid>\n\n        <Grid item xs={2}></Grid>\n\n        <div>\n          <Grid item xs={2}></Grid>\n          {drugs.length ? (\n            <div>\n              {drugs.map(drug => (\n                <Grid container spacing={12}>\n                  <Grid item xs={10}>\n                    <Paper className={classes.drugRes}>\n                      <h2 key={drug.id}>Name: {drug.name}</h2>\n                      <h5>RXCUI: {drug.rxcui}</h5>\n                    </Paper>\n                  </Grid>\n                  <Grid item xs={2}>\n                    <Button\n                      style={{ padding: \"35px\" }}\n                      key={drug.id}\n                      name={drug.name}\n                      className={classes.gridBtn}\n                      onClick={handleDelete}\n                      variant=\"contained\"\n                    >\n                      <TrashIcon\n                        className={classes.deleteButton}\n                        key={drug.id}\n                        name={drug.name}\n                        onClick={handleDelete}\n                      >\n                      </TrashIcon>\n                    </Button>\n                  </Grid>\n                </Grid>\n              ))}\n            </div>\n          ) : (\n              <h3>No Drugs Added</h3>\n            )}\n        </div>\n      </Grid>\n\n      <div>\n        <Grid container spacing={12}>\n          <Grid item xs={2}></Grid>\n          <Grid item xs={10}>\n            <Button\n              className={classes.btn}\n              type=\"button\"\n              onClick={fetchConflict}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Submit for conflicts\n          </Button>\n          </Grid>\n          <Grid item xs={2}></Grid>\n        </Grid>\n        <hr></hr>\n      </div>\n\n      <Grid item xs={12}>\n        <div>\n          {conflicts2.length ? (\n            <Grid container spacing={12}>\n              <Grid item xs={8}>\n                {conflicts2.map(conflict2 => (\n                  <Paper className={classes.drugConflict}>\n                    <h3 key={conflict2.id}>{conflict2.description}</h3>\n                  </Paper>\n                ))}\n              </Grid>\n              <Grid item xs={4}>\n                {conflicts.map(conflict => (\n                  <Paper className={classes.high}>\n                    <h3 key={conflict.id}>Severity: {conflict.threat}</h3>\n                  </Paper>\n                ))}\n              </Grid>\n            </Grid>\n\n          ) : (\n              <div>\n                <h3>No Conflicts Found</h3>\n              </div>\n            )}\n        </div>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextField } from \"@material-ui/core\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  button: {\n    border: \"2px solid seagreen\",\n    boxShadow: theme.shadows[5],\n    width: \"80%\",\n    height: \"20%\",\n    borderRadius: \"30px\",\n    textAlign: \"center\",\n    backgroundColor: \"seagreen\"\n  }\n}));\n\nexport default function SimpleModal(props) {\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n\n  return (\n    <div>\n      <Button\n        className={classes.button}\n        type=\"button\"\n        onClick={props.handleOpen}\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        Add Drug\n      </Button>\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={props.open}\n        onClose={props.handleClose}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <h2 id=\"simple-modal-title\">\n            Please enter your drug routine:\n            <br></br>\n          </h2>\n          <form>\n            <TextField\n              name=\"name\"\n              label=\"Enter drug name here\"\n              variant=\"filled\"\n              onChange={props.handleInputChange}\n              fullWidth\n            ></TextField>\n\n            <TextField\n              type=\"text\"\n              label=\"Last taken date? ex: '2020-11-30'\"\n              variant=\"filled\"\n              name=\"lastTakenDate\"\n              onChange={props.handleInputChange}\n              fullWidth\n            ></TextField>\n            <TextField\n              type=\"text\"\n              label=\"Last taken time? ex: '11:30AM'\"\n              variant=\"filled\"\n              name=\"lastTakenTime\"\n              onChange={props.handleInputChange}\n              fullWidth\n            ></TextField>\n            <TextField\n              type=\"text\"\n              label=\"Drug frequency? ex: '4'\"\n              variant=\"filled\"\n              name=\"frequency\"\n              onChange={props.handleInputChange}\n              fullWidth\n            ></TextField>\n            <br></br>\n            <hr></hr>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={props.handleFormSubmit}\n            >\n              Submit\n            </Button>\n          </form>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport TrashIcon from \"material-ui/svg-icons/action/delete\";\nimport CheckIcon from \"material-ui/svg-icons/navigation/check\";\nimport { TableRow } from \"material-ui/Table\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { black } from \"material-ui/styles/colors\";\nimport Button from \"@material-ui/core/Button\";\n\n\n\nconst ActiveDrugs = props => {\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1\n    },\n    quarterOne: {\n      backgroundColor: \"white\"\n    },\n    quarterTwo: {\n      backgroundColor: \"lightgreen\"\n    },\n    quarterThree: {\n      backgroundColor: \"yellow\"\n    },\n    quarterFour: {\n      backgroundColor: \"white\"\n    },\n    eatNow: {\n      backgroundColor: \"red\"\n    },\n    foo: props => ({\n      backgroundColor: props.backgroundColor,\n    }),\n    addDrug: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      color: theme.palette.text.primary,\n      // backgroundColor: theme.palette.text.hint,\n      backgroundColor: \"black\",\n      color: \"white\",\n      fontWeight: \"900\",\n      align: \"left\"\n    },\n    pillGrid2: {\n      textAlign: \"left\",\n      color: black,\n      fontWeight: \"bold\",\n      fontSize: \"14px\",\n      width: \"20.5%\"\n    },\n    pillGridCell: {\n      textAlign: \"left\",\n      color: black,\n      fontWeight: \"bold\",\n      fontSize: \"14px\",\n      width: \"20.5%\"\n    },\n  }));\n\n\n  const quarterOne = { backgroundColor: \"white\" }\n  const quarterTwo = { backgroundColor: \"green\" }\n  const quarterThree = { backgroundColor: \"yellow\" }\n  const quarterFour = { backgroundColor: \"orange\" }\n  const takeNow = { backgroundColor: \"red\" }\n\n  const bgColor = () => {\n    if (props.currentQuarter === \"quarterOne\") {\n      return { backgroundColor: \"white\" }\n    } else if (props.currentQuarter === \"quarterTwo\") {\n      return { backgroundColor: \"green\" }\n    } else if (props.currentQuarter === \"quarterThree\") {\n      return { backgroundColor: \"yellow\" }\n    } else if (props.currentQuarter === \"quarterFour\") {\n      return ({ backgroundColor: \"orange\" })\n    } else if (props.currentQuarter === \"eatNow\") {\n      return { backgroundColor: \"red\" }\n    }\n  }\n  const x = bgColor()\n  console.log(x)\n\n  const combine = (quarter) => {\n    return (`myStyle.${quarter}`)\n  }\n\n  const classes = useStyles(x);\n\n  return (\n    <div>\n      <TableRow className={`${classes.pillGrid3} ${classes.foo}`}>\n        <TableCell className={classes.pillGrid2} >\n          {props.name}\n        </TableCell>\n        <TableCell className={classes.pillGrid2} >\n          {props.lastTakenDate}\n        </TableCell>\n        <TableCell className={classes.pillGrid2} >\n          {props.lastTakenTime}\n        </TableCell>\n        <TableCell className={classes.pillGrid2} >\n          {props.frequency}\n        </TableCell>\n        <TableCell className={classes.pillGrid2} >\n          <Button variant=\"contained\">\n            <TrashIcon onClick={() => props.handleDrugRemove(props.id)}></TrashIcon>\n          </Button>\n        </TableCell>\n        <TableCell className={classes.pillGridCell}>\n          <Button variant=\"contained\">\n            <CheckIcon onClick={() => props.handleDrugTaken(props.id)} ></CheckIcon>\n          </Button>\n        </TableCell>\n      </TableRow>\n    </div>\n  );\n};\nexport default ActiveDrugs;\n","import Modal from \"../components/DrugModal\";\nimport ActiveDrugs from \"./ActiveDrugs\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport API from \"../utils/API\";\nimport Auth from \"../utils/Auth\";\nimport { Table, TableBody, TableRow } from \"material-ui/Table\";\nimport TableCell from \"@material-ui/core/TableCell\";\nconst moment = require(\"moment\");\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },  \n  addDrug: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.primary,\n    // backgroundColor: theme.palette.text.hint,\n    backgroundColor: \"seagreen\",\n    color: \"white\",\n    fontWeight: \"900\",\n    align: \"left\",\n    overflow: \"auto\",\n    fontFamily: \"Comic Sans MS, Comic Sans, cursive\"\n  },\n  title: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    backgroundColor: \"#23395d\",\n    color: \"white\",\n    fontWeight: \"800\",\n    fontSize: \"30px\",\n    fontFamily: \"Constantia\",\n  },\n  title2: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    backgroundColor: \"#23395d\",\n    color: \"white\",\n    fontWeight: \"800\",\n    fontSize: \"30px\",\n    fontFamily: \"Constantia\",\n    margin: \"5%\"\n  },\n  title3: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: \"white\",\n    fontWeight: \"800\",\n    fontSize: \"30px\",\n    fontFamily: \"Constantia\",\n  },\n  pillGrid2: {\n    textAlign: \"left\",\n    color: \"midnightblue\",\n    fontWeight: \"bold\",\n    fontSize: \"14px\",\n    width: \"20%\",\n  },\n  removeCheckbox: {\n    displayRowCheckbox: \"false\"\n  },\n  modal: {}\n}));\n\nexport default function AddDrug() {\n  const classes = useStyles();\n  const [user, setUser] = useState({});\n  const [drugDetails, setDrugDetails] = useState({});\n  const [open, setOpen] = useState(false);\n  const [allDrugs, setAllDrugs] = useState([]);\n  const [addedDrug, setAddedDrug] = useState(\"\");\n  const [drugQuarter, setDrugQuarter] = useState([]);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // const handleTableRowColor = () => {\n  //   setTableRowColor(\"red\");\n  // }\n\n  useEffect(() => {\n    const loadData = async () => {\n      let currentUser = await API.dashboard(Auth.getToken());\n      setUser(currentUser.data.user);\n      console.log(currentUser);\n      let currentDrugs = await API.getAllUserDrugs(\n        currentUser.data.user._id,\n        Auth.getToken()\n      );\n      console.log(currentDrugs);\n      setAllDrugs(currentDrugs.data)\n      API.saveDrugtoUser(currentUser.data, Auth.getToken())\n        .then(res => console.log(res))\n        .catch(err => console.log(err))\n      let finalDrugArray = await updatingallDrugs(currentDrugs.data)\n      setDrugQuarter(finalDrugArray)\n    }\n\n    loadData();\n  }, [addedDrug]);\n\n\n\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    setDrugDetails({ ...drugDetails, [name]: value });\n    console.log(drugDetails);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    console.log(\"Drug Details: \",\n      drugDetails.lastTakenDate,\n      drugDetails.lastTakenTime,\n      drugDetails.frequency\n    );\n    if (drugDetails.lastTakenDate && drugDetails.frequency && drugDetails.lastTakenTime) {\n      console.log(\"before API front end\")\n      console.log(\"current user, \", user._id)\n      API.saveDrug(\n        {\n          name: drugDetails.name,\n          lastTakenDate: drugDetails.lastTakenDate,\n          lastTakenTime: drugDetails.lastTakenTime,\n          frequency: parseInt(drugDetails.frequency),\n          user: user._id\n        },\n        Auth.getToken()\n      )\n        .then(res => {\n          console.log(res);\n          setAddedDrug(allDrugs.length + 5);\n        })\n        .then(res => handleClose())\n        // .then(res => handleTableRowColor())\n        .catch(err => console.log(err));\n    }\n  };\n\n  const handleDrugRemove = id => {\n    API.removeDrug(id, Auth.getToken())\n      .then(res => {\n        setAddedDrug(allDrugs.length);\n      })\n      .catch(err => console.log(err));\n  };\n  let count = 0\n\n  const handleLastTakenBtn = (id) => {\n    let currentTime = moment().format()\n    let timeArray = currentTime.split(\"T\");\n    let currentDate = timeArray[0]\n    let currentTimeArray = timeArray[1].split(\":\")\n    let presentHourMin = `${currentTimeArray[0]}:${currentTimeArray[1]}`\n    API.drugTaken(id,{\n      lastTakenDate: currentDate,\n      lastTakenTime: presentHourMin\n    },Auth.getToken())\n      .then(res => {\n        setAddedDrug(count++)\n      })\n      .catch(err => console.log(err))\n  }\n\n  //all tracker related functions\n  \n  const getDrugTime = async (drugData) => {\n    const drugT = await drugData.map(drug => ({\n      id: drug._id,\n      combinedTime: `${drug.lastTakenDate} ${drug.lastTakenTime}`,\n      frequency: parseInt(drug.frequency)\n    }))\n    console.log(drugT);\n    const allFutureDrug = await drugT.map(drug => ({\n      id: drug.id,\n      prediction: futureTimeCalcuation(drug.combinedTime,drug.frequency)\n    }))\n    return(allFutureDrug);\n  }\n  const compareTime = async(drugData) => {\n    const currentTime = moment().format('YYYY-MM-DD hh:mm a');\n    let myFutureTime = await getDrugTime(drugData);\n    console.log(\"Current time: \", currentTime)\n    console.log(myFutureTime);\n    let drugQuarter = await myFutureTime.map(drug => {\n      let quarterOneMet =  moment(currentTime).isBefore(drug.prediction[0])\n      let quarterTwoMet =  moment(currentTime).isBetween(drug.prediction[0],drug.prediction[1],\"minutes\",\"[)\")\n      let quarterThreeMet =  moment(currentTime).isBetween(drug.prediction[1],drug.prediction[2],\"minutes\",\"[)\")\n      let quarterFourMet =  moment(currentTime).isBetween(drug.prediction[2],drug.prediction[3],\"minutes\",\"[)\")\n      let timesUp =  moment(currentTime).isBetween(drug.prediction[3],currentTime,\"minutes\",\"[]\")\n      console.log(drug.id)\n      console.log(\"Quarter 1 Met: \", quarterOneMet)\n      console.log(\"Quarter 2 Met: \", quarterTwoMet)\n      console.log(\"Quarter 3 Met: \", quarterThreeMet)\n      console.log(\"Quarter 4 Met: \", quarterFourMet)\n\n      if(quarterOneMet) {\n        return \"quarterOne\"\n      }else if(quarterTwoMet) {\n        return \"quarterTwo\"\n      } else if (quarterThreeMet) {\n        return \"quarterThree\"\n      } else if (quarterFourMet) {\n        return \"quarterFour\"\n      } else if (timesUp) {\n        return \"eatNow\"\n      }\n    })\n    return(drugQuarter)\n    \n  }  \n  const updatingallDrugs = async (drugsData) => {\n    let finalDrugs = []\n    await compareTime(drugsData)\n    .then(res => {\n    finalDrugs = drugsData.map((drug, index)=> ({ ...drug, currentQuarter: res[index] }));\n    }).catch(err=> console.log(err))\n    console.log(\"FINALLLLL: \", finalDrugs)\n    return finalDrugs\n  }\n  \n  // updatingallDrugs().then(res => console.log(res));\n\n  const futureTimeCalcuation = (initialTime,frequency) => {\n    \n    const quarterFreq = hourToMinConverter(frequency/4);\n    console.log(quarterFreq)\n\n    const futurePrediction = []\n\n    let firstQuarter = momentCalculation(initialTime,quarterFreq)\n    console.log(\"First Q: \", typeof firstQuarter)\n    futurePrediction.push(firstQuarter)\n\n    let secondQuarter = momentCalculation(firstQuarter,quarterFreq)\n    console.log(\"Added min 2: \", secondQuarter)\n    futurePrediction.push(secondQuarter)\n\n    let thirdQuarter = momentCalculation(secondQuarter,quarterFreq)\n    console.log(\"Added min 3: \", thirdQuarter);\n    futurePrediction.push(thirdQuarter)\n    let takeNow = momentCalculation(thirdQuarter,quarterFreq)\n    console.log(\"Take now: \", takeNow);\n    futurePrediction.push(takeNow);\n    console.log(\"Future Prediction :\", futurePrediction);\n    \n    return futurePrediction;\n  }\n  \n  const momentCalculation = (time, frequency) => {\n    let futureTime = moment(time).add(frequency, \"minutes\").format('YYYY-MM-DD hh:mm a')\n    return futureTime;\n  }\n\n\n  const hourToMinConverter = (hour) => {\n    const min = (hour - Math.floor(hour))*60;\n    const hr = Math.floor(hour)*60;\n    const totalMin = hr + min;\n    return totalMin;\n  }\n\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} className={classes.title2}>\n          <Paper className={classes.title}>My Pills Tracker</Paper>\n          <Table>\n            <TableBody displayRowCheckbox={false}>\n              <TableRow>\n                <TableRow>\n                  <TableCell className={classes.pillGrid2}>\n                    Pill Name\n                    </TableCell>\n                  <TableCell className={classes.pillGrid2}>\n                    Last Date\n                    </TableCell>\n                  <TableCell className={classes.pillGrid2}>\n                    Last Time\n                    </TableCell>\n                  <TableCell className={classes.pillGrid2}>\n                    Frequency (hours)\n                    </TableCell>\n                  <TableCell className={classes.pillGrid2}>Delete?</TableCell>\n                  <TableCell className={classes.pillGrid2}>\n                    Take Pill\n                    </TableCell>\n                </TableRow>\n                {drugQuarter.map(drug => (\n                  <ActiveDrugs\n                    id={drug._id}\n                    key={drug._id}\n                    name={drug.name}\n                    frequency={drug.frequency}\n                    lastTakenDate={drug.lastTakenDate}\n                    lastTakenTime={drug.lastTakenTime}\n                    handleDrugRemove={handleDrugRemove}\n                    handleDrugTaken={handleLastTakenBtn}\n                    currentQuarter={drug.currentQuarter}\n                  />\n                ))}\n              </TableRow>\n            </TableBody>\n          </Table>\n        </Grid>\n        <Grid item xs={3} className={classes.title3}>\n          <Modal\n            className={classes.modal}\n            name={\"Drug 1\"}\n            user_id={user._id}\n            handleInputChange={handleInputChange}\n            handleFormSubmit={handleFormSubmit}\n            handleOpen={handleOpen}\n            handleClose={handleClose}\n            open={open}\n          />\n        </Grid>\n        <Grid item xs={4}></Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport getMuiTheme from \"material-ui/styles/getMuiTheme\";\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport HomePage from \"./components/HomePage\";\nimport { PrivateRoute, PropsRoute, LoggedOutRoute } from \"./components/Routes\";\nimport LoginPage from \"./pages/Login\";\nimport LogoutFunction from \"./pages/LogoutFunction\";\nimport SignUpPage from \"./pages/Signup\";\nimport DashboardPage from \"./pages/DashboardPage\";\nimport Auth from \"./utils/Auth\";\nimport SearchV2 from './pages/Search2.0'\nimport { motion } from \"framer-motion\";\nimport \"./nav.css\";\nimport AddDrug from \"./components/AddDrug\";\nimport './index.css';\nimport PillsIcon from \"./images/pillsIcon.png\"\n\n// remove tap delay, essential for MaterialUI to work properly\n\nconst App = () => {\n  const [authenticated, setAuthenticate] = useState(false);\n\n  useEffect(() => {\n    toggleAuthenticateStatus();\n  }, []);\n\n  const toggleAuthenticateStatus = () => {\n    // check authenticated status and toggle state based on that\n    setAuthenticate(Auth.isUserAuthenticated());\n  };\n\n  return (\n    <div className=\"body\">\n      <MuiThemeProvider muiTheme={getMuiTheme()}>\n        <Router>\n          <div className=\"appBar\">\n            {authenticated ? (\n              <div>\n                <img\n                  src={PillsIcon}\n                  className=\"navTitle\"\n                  alt=\"Druggler Icon\"\n                  height=\"30px\"\n                  width=\"50px\"\n                  style={{ margin: \"0px\", marginTop: \"20px\" }}></img>\n                <div className=\"navTitle\" style={{ margin: \"0px\" }}>Druggler</div>\n                <img\n                  src={PillsIcon}\n                  className=\"navTitle\"\n                  alt=\"Druggler Icon\"\n                  height=\"30px\"\n                  width=\"50px\"\n                  style={{ margin: \"0px\", marginTop: \"20px\" }}></img>\n                <div>\n                  <Link\n                    className=\"navButton\"\n                    to=\"/logout\"\n                    color=\"error\"\n                  >\n                    {\" \"}\n                    Log out{\" \"}\n                  </Link>\n                </div>\n\n                <div>\n                  <Link\n                    className=\"navButton\"\n                    to=\"/dashboard\"\n                  >\n                    {\" \"}My Pills{\" \"}\n                  </Link>\n                </div>\n                <div>\n                  <Link\n                    className=\"navButton\"\n                    to=\"/interactions\"\n                  >\n                    {\" \"}Interactions{\" \"}\n                  </Link>\n                </div>\n              </div>\n            ) : (\n                <div>\n                  <img\n                    src={PillsIcon}\n                    className=\"navTitle\"\n                    alt=\"Druggler Icon\"\n                    height=\"30px\"\n                    width=\"50px\"\n                    style={{ marginTop: \"20px\" }}></img>\n                  <div className=\"navTitle\" >Druggler</div>\n                  <img\n                    src={PillsIcon}\n                    className=\"navTitle\"\n                    alt=\"Druggler Icon\"\n                    height=\"30px\"\n                    width=\"50px\"\n                    style={{ marginTop: \"20px\" }}></img>\n                </div>\n              )}\n          </div>\n          {/* <NavSpacer /> */}\n\n          <PropsRoute\n            exact\n            path=\"/\"\n            component={HomePage}\n            toggleAuthenticateStatus={toggleAuthenticateStatus}\n          />\n\n          {/* <PrivateRoute path=\"/dashboard\" component={DashboardPage} /> */}\n          <PrivateRoute path=\"/dashboard\" component={AddDrug} />\n          <PrivateRoute path=\"/interactions\" component={SearchV2} />\n\n          {/* <PrivateRoute path=\"/mypills\" component={AddDrug} /> */}\n\n          <LoggedOutRoute\n            path=\"/login\"\n            component={LoginPage}\n            toggleAuthenticateStatus={toggleAuthenticateStatus}\n          />\n\n          <LoggedOutRoute path=\"/signup\" component={SignUpPage} />\n          <Route path=\"/logout\" component={LogoutFunction} />\n        </Router>\n\n        {/* <div>\n        <Router>\n          <Switch>\n            Route exact path =\"/\"\n          </Switch>\n        </Router>\n      </div> */}\n\n        {/* <Search /> */}\n        {/* <AddDrug /> */}\n      </MuiThemeProvider>\n    </div>\n  );\n};\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/pillsIcon.c235a917.png\";"],"sourceRoot":""}