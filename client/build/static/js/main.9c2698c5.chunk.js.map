{"version":3,"sources":["images/drugglerBackgroundImage.jpeg","utils/Auth.js","components/HomePage.js","components/Routes.js","components/LoginForm.js","utils/API.js","pages/Login.js","pages/LogoutFunction.js","components/SignUpForm.js","pages/Signup.js","components/Dashboard.js","pages/DashboardPage.js","pages/Search2.0.js","components/DrugModal.js","components/ActiveDrugs.js","components/AddDrug.js","App.js","registerServiceWorker.js","index.js","images/pillsIcon.png"],"names":["module","exports","__webpack_require__","p","Auth","token","localStorage","setItem","getItem","removeItem","HomePage","props","useEffect","toggleAuthenticateStatus","classes","makeStyles","signUp","background","borderRadius","border","color","fontWeight","height","padding","boxShadow","login","label","textTransform","homePageButtonDiv","backgroundColor","useStyles","react_default","a","createElement","className","style","paddingBottom","src","DrugglerImage","width","isUserAuthenticated","Card","fontSize","Button","root","size","variant","component","RouterLink","to","PrivateRoute","_ref","Component","rest","Object","objectWithoutProperties","react_router","assign","render","pathname","state","from","location","LoggedOutRoute","_ref2","PropsRoute","_ref3","LoginForm","onSubmit","onChange","errors","successMessage","user","action","summary","TextField_default","floatingLabelText","name","errorText","email","value","type","password","RaisedButton_default","danger","react_router_dom","API","userData","axios","post","dashboard","get","headers","Authorization","concat","getDrugsConflict","queryRes","getDrugsID","search","saveDrug","drugData","getUser","id","saveDrugtoUser","drug","put","getAllUserDrugs","removeDrug","delete","drugTaken","newTime","LoginPage","history","_useState","useState","_useState2","slicedToArray","setErrors","_useState3","_useState4","setSuccessMessage","_useState5","_useState6","setUser","storedMessage","components_LoginForm","event","preventDefault","then","res","authenticateUser","data","push","catch","response","message","_event$target","target","objectSpread","defineProperty","LogoutFunction","deauthenticateUser","SignUpForm","primary","SignUpPage","components_SignUpForm","Dashboard","secretData","title","subtitle","React","theme","_high","flexGrow","spacing","textAlign","fontFamily","drugRes","btn","shadows","align","overflow","gridBtn","input","high","deleteButton","SearchV2","setSearch","drugs","setDrugs","conflicts","setConflicts","loadDrugs","toConsumableArray","length","idGroup","rxcui","rxnormId","err","console","log","loadConflicts","finalAPICall","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","return","interaction","fullInteractionTypeGroup","fullInteractionType","commentRes","severityRes","holder","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","index","comment","interactionPair","severity","details","threat","handleDelete","e","getAttribute","filter","Grid","container","item","xs","direction","justify","inputField","TextField_TextField","trim","onClick","document","getElementById","focus","map","Paper","key","delete_default","conflict","rand","Math","round","random","getModalStyle","top","left","transform","paper","position","palette","button","SimpleModal","_React$useState","modalStyle","handleOpen","Modal","aria-labelledby","aria-describedby","open","onClose","handleClose","handleInputChange","fullWidth","handleFormSubmit","ActiveDrugs","_addDrug","quarterOne","quarterTwo","quarterThree","quarterFour","eatNow","foo","addDrug","text","columnNames","marginRight","paper2","paper3","pillGrid","pillGrid2","black","pillGridCell","x","currentQuarter","Table","pillGrid3","TableCell","lastTakenDate","lastTakenTime","frequency","handleDrugRemove","check_default","handleDrugTaken","moment","require","title2","margin","title3","removeCheckbox","displayRowCheckbox","modal","AddDrug","drugDetails","setDrugDetails","setOpen","_useState7","_useState8","allDrugs","setAllDrugs","_useState9","_useState10","addedDrug","setAddedDrug","_useState11","_useState12","drugQuarter","setDrugQuarter","asyncToGenerator","regenerator_default","mark","_callee","currentUser","currentDrugs","finalDrugArray","wrap","_context","prev","getToken","sent","_id","updatingallDrugs","stop","apply","this","arguments","loadData","count","handleLastTakenBtn","timeArray","format","split","currentDate","currentTimeArray","presentHourMin","getDrugTime","_callee2","drugT","allFutureDrug","_context2","combinedTime","parseInt","prediction","futureTimeCalcuation","abrupt","_x","compareTime","_callee3","currentTime","myFutureTime","_context3","quarterOneMet","isBefore","quarterTwoMet","isBetween","quarterThreeMet","quarterFourMet","timesUp","_x2","_ref4","_callee4","drugsData","finalDrugs","_context4","_x3","initialTime","quarterFreq","hourToMinConverter","futurePrediction","firstQuarter","momentCalculation","secondQuarter","thirdQuarter","takeNow","time","add","hour","min","floor","components_ActiveDrugs","user_id","_e$target","App","authenticated","setAuthenticate","MuiThemeProvider_default","muiTheme","getMuiTheme","PillsIcon","alt","marginTop","Routes_PropsRoute","exact","path","Routes_PrivateRoute","Routes_LoggedOutRoute","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","src_App","URL","process","origin","addEventListener","fetch","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.9c2698c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/drugglerBackgroundImage.3aeb39e2.jpeg\";","class Auth {\n\n    /**\n     * Authenticate a user. Save a token string in Local Storage\n     *\n     * @param {string} token\n     */\n    static authenticateUser(token) {\n      localStorage.setItem('token', token);\n    }\n  \n    /**\n     * Check if a user is authenticated - check if a token is saved in Local Storage\n     *\n     * @returns {boolean}\n     */\n    static isUserAuthenticated() {\n      return localStorage.getItem('token') !== null;\n    }\n  \n    /**\n     * Deauthenticate a user. Remove a token from Local Storage.\n     *\n     */\n    static deauthenticateUser() {\n      localStorage.removeItem('token');\n    }\n  \n    /**\n     * Get a token value.\n     *\n     * @returns {string}\n     */\n  \n    static getToken() {\n      return localStorage.getItem('token');\n    }\n  \n  }\n  \n  export default Auth;","import React, { useEffect } from 'react';\nimport { Card, CardText } from 'material-ui/Card';\nimport Auth from '../utils/Auth';\nimport Button from \"@material-ui/core/Button\";\nimport { Link as RouterLink } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DrugglerImage from '../images/drugglerBackgroundImage.jpeg';\n\nconst HomePage = (props) => {\n\n  useEffect(() => {\n    props.toggleAuthenticateStatus();\n  }, [])\n\n  const useStyles = makeStyles({\n    signUp: {\n      background: 'linear-gradient(180deg, seagreen 100%, black 10%)',\n      borderRadius: 60,\n      border: 0,\n      color: 'white',\n      fontWeight: '800',\n      height: 48,\n      padding: '30px 30px',\n      boxShadow: '3px 30px 5px 2px rgba(255, 105, 135, .8)',\n    },\n    login: {\n      background: 'linear-gradient(180deg, #23395d 100%, black 10%)',\n      borderRadius: 60,\n      border: 0,\n      color: 'white',\n      fontWeight: '800',\n      height: 48,\n      padding: '30px 30px',\n      boxShadow: '3px 30px 5px 2px rgba(255, 105, 135, .8)',\n    },\n    label: {\n      textTransform: 'capitalize',\n    },\n    homePageButtonDiv: {\n      backgroundColor: 'black'\n    }\n  });\n\n  const classes = useStyles();\n\n  return (\n    <div className=\"container\">\n      <div>\n        <h1 style={{ color: '#23395d', paddingBottom: '50px' }}>\n          Welcome to Druggler!\n        </h1>\n        <h2 style={{ color: '#23395d' }}>\n          Having trouble juggling all of your drugs?  Try Druggler!\n        </h2>\n        <img\n          src={DrugglerImage}\n          height=\"30%\"\n          width=\"50%\"\n          style={{ boxShadow: '3px 20px 10px 2px rgba(255, 105, 135, .8)' }}\n        ></img>\n        <hr></hr>\n        <h3 style={{ color: '#23395d' }}>\n          Don't have an account? Sign up!\n        </h3>\n      </div>\n      {Auth.isUserAuthenticated() ? (\n        <CardText style={{ fontSize: '16px', color: 'green' }}>Welcome! You are logged in.</CardText>\n      ) : (\n          <div>\n            <CardText style={{ fontSize: '16px', color: 'green' }}>You are not logged in.</CardText>\n            <Card className=\"container\">\n\n            </Card>\n            <Button\n              classes={{ root: classes.login, label: classes.label }}\n              size=\"large\"\n              variant=\"contained\"\n              component={RouterLink} to=\"/login\"\n              style={{ width: \"30%\" }}\n            >\n              Login\n                </Button>\n\n            <Button\n              size=\"large\"\n              classes={{ root: classes.signUp, label: classes.label }}\n              variant=\"contained\"\n              component={RouterLink} to=\"/signup\"\n              style={{ width: \"30%\" }}\n            >\n              Sign up\n                </Button>\n          </div>\n        )}\n    </div>\n  )\n\n};\n\nexport default HomePage;","import React from \"react\";\n\nimport Auth from '../utils/Auth';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={props => (\n    Auth.isUserAuthenticated() ? (\n      <Component {...props} {...rest} />\n    ) : (\n        <Redirect to={{\n          pathname: '/',\n          state: { from: props.location }\n        }} />\n      )\n  )} />\n)\n\nconst LoggedOutRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={props => (\n    Auth.isUserAuthenticated() ? (\n      <Redirect to={{\n        pathname: '/',\n        state: { from: props.location }\n      }} />\n    ) : (\n        <Component {...props} {...rest} />\n      )\n  )} />\n)\n\nconst PropsRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={props => (\n    <Component {...props} {...rest} />\n  )} />\n)\n\nexport { PrivateRoute, LoggedOutRoute, PropsRoute };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Card, CardText } from 'material-ui/Card';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport TextField from 'material-ui/TextField';\nimport '../css/login.css';\n\nconst LoginForm = ({\n  onSubmit,\n  onChange,\n  errors,\n  successMessage,\n  user,\n  toggleAuthenticateStatus\n}) => (\n    <Card className=\"container\">\n      <form action=\"/\" onSubmit={onSubmit}>\n        <h2 className=\"card-heading\">Login</h2>\n\n        {successMessage && <p className=\"success-message\">{successMessage}</p>}\n        {errors.summary && <p className=\"error-message\">{errors.summary}</p>}\n\n        <div className=\"field-line\">\n          <TextField\n            floatingLabelText=\"Email\"\n            name=\"email\"\n            errorText={errors.email}\n            onChange={onChange}\n            value={user.email}\n          />\n        </div>\n\n        <div className=\"field-line\">\n          <TextField\n            floatingLabelText=\"Password\"\n            type=\"password\"\n            name=\"password\"\n            onChange={onChange}\n            errorText={errors.password}\n            value={user.password}\n          />\n        </div>\n\n        <div className=\"button-line\">\n          <RaisedButton\n            className=\"raised-button\"\n            type=\"submit\"\n            label=\"Log in\"\n            danger\n          />\n        </div>\n\n        <CardText>Don't have an account? <Link to={'/signup'}>Create one</Link>.</CardText>\n      </form>\n    </Card>\n  );\n\nLoginForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  successMessage: PropTypes.string.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nexport default LoginForm;","import axios from \"axios\";\n\n//methods for interacting with API Auth routes\nexport default {\n   login: userData =>\n      axios.post(\"/auth/login\", userData),\n   signUp: userData =>\n      axios.post('/auth/signup', userData),\n   dashboard: token =>\n      axios.get('/api/dashboard', { headers: { Authorization: `bearer ${token}` } }),\n   getDrugsConflict: (queryRes,token) =>\n      axios.get(`https://rxnav.nlm.nih.gov/REST/interaction/list.json?rxcuis=${queryRes}`, { headers: { Authorization: `bearer ${token}` } }),\n   getDrugsID: (search,token) =>\n      axios.get(`https://rxnav.nlm.nih.gov/REST/rxcui?name=${search}`, { headers: { Authorization: `bearer ${token}` } }),\n   saveDrug: (drugData, token)=> \n      axios.post(\"/api/drugs\", drugData, { headers: { Authorization: `bearer ${token}` } }),\n   getUser: (id, token)  =>\n      axios.get(\"/api/user/\" + id, { headers: { Authorization: `bearer ${token}` } }),\n   saveDrugtoUser: (drug, token) => \n      axios.put(\"api/user\", drug, { headers: { Authorization: `bearer ${token}` } }),\n   getAllUserDrugs: (id, token) =>\n      axios.get(\"api/user/drugs/\" + id,{ headers: { Authorization: `bearer ${token}` } }),\n   removeDrug: (id, token) => \n      axios.delete (\"api/drugs/\" + id, { headers: { Authorization: `bearer ${token}` } }),\n   drugTaken: (id, newTime, token) => \n      axios.put(\"api/drugs/\" + id, newTime, { headers: { Authorization: `bearer ${token}` } })\n};\n","import React, { useState, useEffect } from 'react';\nimport Auth from '../utils/Auth';\nimport LoginForm from '../components/LoginForm.js';\nimport API from '../utils/API';\n\nconst LoginPage = ({ history, toggleAuthenticateStatus }) => {\n  // set the initial component state\n  const [errors, setErrors] = useState({});\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\"\n  })\n\n  useEffect(() => {\n    const storedMessage = localStorage.getItem('successMessage');\n    let successMessage = '';\n\n    if (storedMessage) {\n      successMessage = storedMessage;\n      localStorage.removeItem('successMessage');\n    }\n    setSuccessMessage(successMessage);\n\n    return function cleanUp() {\n      setErrors({});\n    }\n  }, [])\n\n\n\n  /**\n   * Process the form.\n   *\n   * @param {object} event - the JavaScript event object\n   */\n  const processForm = event => {\n    // prevent default action. in this case, action is the form submission event\n    event.preventDefault();\n\n    // create a string for an HTTP body message\n    const { email, password } = user;\n\n    API.login({ email, password }).then(res => {\n      // save the token\n      Auth.authenticateUser(res.data.token);\n\n      // update authenticated state\n      toggleAuthenticateStatus()\n\n      // redirect signed in user to dashboard\n      history.push('/dashboard');\n\n    }).catch(({ response }) => {\n\n      const errors = response.data.errors ? response.data.errors : {};\n      errors.summary = response.data.message;\n\n      setErrors(errors);\n    });\n\n  }\n\n  /**\n   * Change the user object.\n   *\n   * @param {object} event - the JavaScript event object\n   */\n  const changeUser = event => {\n    const { name, value } = event.target;\n    setUser({ ...user, [name]: value });\n  }\n\n  /**\n   * Render the component.\n   */\n\n  return (\n    <LoginForm\n      onSubmit={processForm}\n      onChange={changeUser}\n      errors={errors}\n      successMessage={successMessage}\n      user={user}\n    />\n  );\n\n\n}\n\n\n\nexport default LoginPage;","import React, { useEffect } from 'react';\n// import PropTypes from 'prop-types';\nimport Auth from '../utils/Auth';\n\n\nconst LogoutFunction = ({ history }) => {\n\n  useEffect(() => {\n    // deauthenticate user\n    Auth.deauthenticateUser();\n    // change the current URL to / after logout\n    history.push('/');\n  }, [])\n\n\n  return (\n    <div>\n      <p>Logging out...</p>\n    </div>\n  )\n\n}\n\n// LogoutFunction.contextTypes = {\n//   router: PropTypes.object.isRequired\n// };\n\nexport default LogoutFunction;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Card, CardText } from 'material-ui/Card';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport TextField from 'material-ui/TextField';\n\nconst SignUpForm = ({\n  onSubmit,\n  onChange,\n  errors,\n  user,\n}) => (\n    <Card className=\"container\">\n      <form action=\"/\" onSubmit={onSubmit}>\n        <h2 className=\"card-heading\">Sign Up</h2>\n\n        {errors.summary && <p className=\"error-message\">{errors.summary}</p>}\n\n        <div className=\"field-line\">\n          <TextField\n            floatingLabelText=\"Name\"\n            name=\"name\"\n            errorText={errors.name}\n            onChange={onChange}\n            value={user.name}\n          />\n        </div>\n\n        <div className=\"field-line\">\n          <TextField\n            floatingLabelText=\"Email\"\n            name=\"email\"\n            errorText={errors.email}\n            onChange={onChange}\n            value={user.email}\n          />\n        </div>\n\n        <div className=\"field-line\">\n          <TextField\n            floatingLabelText=\"Password\"\n            type=\"password\"\n            name=\"password\"\n            onChange={onChange}\n            errorText={errors.password}\n            value={user.password}\n          />\n        </div>\n\n        <div className=\"button-line\">\n          <RaisedButton type=\"submit\" label=\"Create New Account\" primary />\n        </div>\n\n        <CardText>Already have an account? <Link to={'/login'}>Log in</Link></CardText>\n      </form>\n    </Card>\n  );\n\nSignUpForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nexport default SignUpForm;","import React, { useState } from 'react';\nimport SignUpForm from '../components/SignUpForm';\nimport API from '../utils/API';\n\nconst SignUpPage = ({ history }) => {\n  // set the initial component A\n  const [errors, setErrors] = useState({});\n  const [user, setUser] = useState({\n    email: \"\",\n    name: \"\",\n    password: \"\"\n  })\n\n\n  /**\n   * Process the form.\n   *\n   * @param {object} event - the JavaScript event object\n   */\n  const processForm = event => {\n    // prevent default action. in this case, action is the form submission event\n    event.preventDefault();\n\n    // create a string for an HTTP body message\n    const { name, email, password } = user;\n\n    //const formData = `email=${email}&password=${password}`;\n    API.signUp({ name, email, password }).then(res => {\n      // change the component-container state\n      // set a message\n      localStorage.setItem('successMessage', res.data.message);\n\n      // redirect user after sign up to login page\n      history.push('/login');\n      setErrors({});\n\n    }).catch(({ response }) => {\n\n      const errors = response.data.errors ? response.data.errors : {};\n      errors.summary = response.data.message;\n\n      setErrors({ ...errors, errors });\n    });\n  }\n\n  /**\n   * Change the user object.\n   *\n   * @param {object} event - the JavaScript event object\n   */\n  const changeUser = event => {\n    const { name, value } = event.target;\n    setUser({ ...user, [name]: value });\n  }\n\n  /**\n   * Render the component.\n   */\n\n  return (\n    <SignUpForm\n      onSubmit={processForm}\n      onChange={changeUser}\n      errors={errors}\n      user={user}\n    />\n  );\n\n\n}\n\n\n\nexport default SignUpPage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardTitle, CardText } from 'material-ui/Card';\n\nconst Dashboard = ({ secretData, user }) => (\n  <Card className=\"container\">\n    <CardTitle\n      title=\"Dashboard\"\n      subtitle=\"\"\n    />\n    {secretData && <CardText style={{ fontSize: '16px', color: 'green' }}>Welcome <strong>{user.name}</strong>!<br />{secretData}</CardText>}\n  </Card>\n);\n\nDashboard.propTypes = {\n  secretData: PropTypes.string.isRequired\n};\n\nexport default Dashboard;","import React from 'react';\nimport Auth from '../utils/Auth';\nimport Dashboard from '../components/Dashboard';\nimport API from '../utils/API';\n\nclass DashboardPage extends React.Component {\n  state = {\n    secretData: '',\n    user: {}\n  }\n\n  /**\n   * This method will be executed after initial rendering.\n   */\n  componentDidMount() {\n    API.dashboard(Auth.getToken())\n      .then(res => {\n        this.setState({\n          secretData: res.data.message,\n          user: res.data.user\n        });\n      })\n  }\n\n  /**\n   * Render the component.\n   */\n  render() {\n    return (\n      <div>\n        <Dashboard\n          secretData={this.state.secretData}\n          user={this.state.user}\n        />\n      </div>\n\n    );\n  }\n\n}\n\nexport default DashboardPage;","import React, { useState } from \"react\";\nimport API from \"../utils/API\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport TrashIcon from \"material-ui/svg-icons/action/delete\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  title: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    backgroundColor: \"#23395d\",\n    color: \"white\",\n    fontWeight: \"800\",\n    fontFamily: \"Constantia\"\n  },\n  drugRes: {\n    padding: \"0\",\n    textAlign: \"left\",\n    color: \"black\",\n    fontWeight: \"bold\",\n    fontSize: \"14px\",\n    width: \"auto\",\n    variant: \"outlined\",\n    backgroundColor: \"lightgreen\",\n    border: \"0.1rem solid\",\n  },\n  btn: {\n    border: \"2px solid seagreen\",\n    boxShadow: theme.shadows[5],\n    borderRadius: \"30px\",\n    textAlign: \"center\",\n    backgroundColor: \"#23395d\",\n    color: \"white\",\n    fontWeight: \"400\",\n    align: \"left\",\n    overflow: \"auto\",\n    fontFamily: \"Constantia\"\n  },\n  gridBtn: {\n    padding: \"30px\",\n    overflow: \"auto\"\n  },\n  input: {\n    width: \"100%\"\n  },\n  high: {\n    backgroundColor: \"#ff0000\",\n    textAlign: \"center\",\n    overflow: \"auto\",\n    height: \"auto\",\n    borderRadius: \"30px\",\n    textAlign: \"center\",\n    color: \"black\",\n    fontWeight: \"400\",\n    fontFamily: \"Constantia\"\n  },\n  deleteButton: {\n    textAlign: \"center\",\n    overflow: \"auto\",\n    height: \"30px\",\n    width: \"30px\"\n    // border: \"1mm ridge rgba(200, 200, 200, .8)\"\n  }\n}));\n\nexport default function SearchV2() {\n  const classes = useStyles();\n  const [search, setSearch] = useState({});\n  const [drugs, setDrugs] = useState([]);\n  const [conflicts, setConflicts] = useState([]);\n\n  // fluconazole astemizole cisapride disopyramide\n\n  const addDrug = e => {\n    e.preventDefault();\n    loadDrugs(search);\n    document.getElementById(\"drugTextField\").value = \"\";\n    document.getElementById(\"drugTextField\").focus();\n  };\n\n  const loadDrugs = search => {\n    API.getDrugsID(search)\n      .then(res => {\n        setDrugs([\n          ...drugs,\n          {\n            id: drugs.length,\n            name: res.data.idGroup.name,\n            rxcui: res.data.idGroup.rxnormId\n          }\n        ]);\n      })\n      .catch(err => console.log(err));\n  };\n\n  const fetchConflict = e => {\n    e.preventDefault();\n    loadConflicts();\n  };\n\n  const loadConflicts = () => {\n    let finalAPICall = \"\";\n    for (let element of drugs) {\n      finalAPICall += element.rxcui[0] + \"+\";\n      // maybe have a line that stops \"+\" at the last one?\n    }\n    API.getDrugsConflict(finalAPICall)\n      .then(res => {\n        const interaction =\n          res.data.fullInteractionTypeGroup[1].fullInteractionType;\n        let commentRes = {};\n        let severityRes = {};\n        let holder = [];\n        for (let index of interaction) {\n          commentRes = index.comment;\n          severityRes = index.interactionPair[0].severity;\n          console.log(commentRes);\n          holder.push({\n            id: conflicts.length,\n            details: commentRes,\n            threat: severityRes\n          });\n        }\n        setConflicts(holder);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  const handleDelete = e => {\n    const name = e.target.getAttribute(\"name\");\n    setDrugs(drugs.filter(drug => drug.name !== name));\n  };\n\n  return (\n    <div>\n      <Grid container spacing={12}>\n        <Grid item xs={12} container direction=\"column\" justify=\"center\">\n          <div className={classes.title}>\n            <h1>Check Drug Interactions</h1>\n            {/* <p>Add two or more drugs to see their interactions.</p> */}\n          </div>\n        </Grid>\n        <Grid item xs={2}></Grid>\n        <Grid item xs={8}>\n          <p>Add two or more drugs to see their interactions.</p>\n        </Grid>\n        <Grid item xs={2}></Grid>\n\n        <Grid item xs={2}></Grid>\n        <Grid item xs={7}>\n          <div className={classes.inputField}>\n            <TextField\n              id=\"drugTextField\"\n              className={classes.input}\n              type=\"text\"\n              label=\"Enter drug name here\"\n              variant=\"filled\"\n              onChange={e => setSearch(e.target.value.trim())}\n            ></TextField>\n          </div>\n        </Grid>\n        <Grid item xs={2}>\n          <div className={classes.inputField}>\n            <Button\n              className={classes.btn}\n              type=\"button\"\n              onClick={addDrug}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Add Drug\n            </Button>\n          </div>\n        </Grid>\n        <Grid item xs={1}></Grid>\n\n        <Grid item xs={2}></Grid>\n\n        <div>\n          <Grid item xs={2}></Grid>\n          {drugs.length ? (\n            <div>\n              {drugs.map(drug => (\n                <Grid container spacing={12}>\n                  <Grid item xs={10}>\n                    <Paper className={classes.drugRes}>\n                      <h2 key={drug.id}>Name: {drug.name}</h2>\n                      <h5>RXCUI: {drug.rxcui}</h5>\n                    </Paper>\n                  </Grid>\n                  <Grid item xs={2}>\n                    <Button\n                      style={{padding: \"35px\"}}\n                      key={drug.id}\n                      name={drug.name}\n                      className={classes.gridBtn}\n                      onClick={handleDelete}\n                      variant=\"contained\"\n                    >\n                      <TrashIcon\n                        className={classes.deleteButton}\n                        key={drug.id}\n                        name={drug.name}\n                        onClick={handleDelete}\n                      >\n                      </TrashIcon>\n                      \n                    </Button>\n                  </Grid>\n                </Grid>\n              ))}\n            </div>\n          ) : (\n              <h3>No Drugs Added</h3>\n            )}\n        </div>\n      </Grid>\n\n      <div>\n        <Grid container spacing={12}>\n          <Grid item xs={2}></Grid>\n          <Grid item xs={10}>\n            <Button\n              className={classes.btn}\n              type=\"button\"\n              onClick={fetchConflict}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Submit for conflicts\n          </Button>\n          </Grid>\n          <Grid item xs={2}></Grid>\n        </Grid>\n        <hr></hr>\n      </div>\n\n      <Grid item xs={12}>\n        <ul>\n          {conflicts.length ? (\n            <div>\n              {conflicts.map(conflict => (\n                <Grid container spacing={12}>\n                  <Grid item xs={8}>\n                    <Paper className={classes.drugRes}>\n                      <h3 key={conflict.id}>{conflict.details}</h3>\n                    </Paper>\n                  </Grid>\n                  <Grid item xs={3}>\n                    <Paper className={classes.high}>\n                      <h3 key={conflict.id}>Severity: {conflict.threat}</h3>\n                    </Paper>\n                  </Grid>\n                  <Grid item xs={1}></Grid>\n                </Grid>\n              ))}\n            </div>\n          ) : (\n              <div>\n                <h3>No Conflicts Found</h3>\n              </div>\n            )}\n        </ul>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextField } from \"@material-ui/core\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  button: {\n    border: \"2px solid seagreen\",\n    boxShadow: theme.shadows[5],\n    width: \"80%\",\n    height: \"20%\",\n    borderRadius: \"30px\",\n    textAlign: \"center\",\n    backgroundColor: \"seagreen\"\n  }\n}));\n\nexport default function SimpleModal(props) {\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n\n  return (\n    <div>\n      <Button\n        className={classes.button}\n        type=\"button\"\n        onClick={props.handleOpen}\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        Add Drug\n      </Button>\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={props.open}\n        onClose={props.handleClose}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <h2 id=\"simple-modal-title\">\n            Please enter your drug routine:\n            <br></br>\n          </h2>\n          <form>\n            <TextField\n              name=\"name\"\n              label=\"Enter drug name here\"\n              variant=\"filled\"\n              onChange={props.handleInputChange}\n              fullWidth\n            ></TextField>\n\n            <TextField\n              type=\"text\"\n              label=\"Last taken date? ex: '2020-11-30'\"\n              variant=\"filled\"\n              name=\"lastTakenDate\"\n              onChange={props.handleInputChange}\n              fullWidth\n            ></TextField>\n            <TextField\n              type=\"text\"\n              label=\"Last taken time? ex: '11:30AM'\"\n              variant=\"filled\"\n              name=\"lastTakenTime\"\n              onChange={props.handleInputChange}\n              fullWidth\n            ></TextField>\n            <TextField\n              type=\"text\"\n              label=\"Drug frequency? ex: '4'\"\n              variant=\"filled\"\n              name=\"frequency\"\n              onChange={props.handleInputChange}\n              fullWidth\n            ></TextField>\n            <br></br>\n            <hr></hr>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={props.handleFormSubmit}\n            >\n              Submit\n            </Button>\n          </form>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport TrashIcon from \"material-ui/svg-icons/action/delete\";\nimport CheckIcon from \"material-ui/svg-icons/navigation/check\";\nimport { TableRow } from \"material-ui/Table\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { black } from \"material-ui/styles/colors\";\nimport Button from \"@material-ui/core/Button\";\n\n\n\nconst ActiveDrugs = props => {\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1\n    },\n    quarterOne: {\n      backgroundColor: \"white\"\n    },\n    quarterTwo: {\n        backgroundColor: \"lightgreen\"\n    },\n    quarterThree: {\n        backgroundColor: \"yellow\"\n    },\n    quarterFour: {\n        backgroundColor: \"white\"\n    },\n    eatNow: {\n        backgroundColor: \"red\"\n    },\n    foo: props => ({\n        backgroundColor: props.backgroundColor,\n      }),\n    addDrug: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      color: theme.palette.text.primary,\n      // backgroundColor: theme.palette.text.hint,\n      backgroundColor: \"black\",\n      color: \"white\",\n      fontWeight: \"900\",\n      align: \"left\"\n    },\n    title: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      backgroundColor: \"darkgray\",\n      color: \"black\",\n      fontWeight: \"900\"\n    },\n    columnNames: {\n      padding: theme.spacing(2),\n      textAlign: \"left\",\n      backgroundColor: \"cyan\",\n      color: \"black\",\n      fontWeight: \"bold\",\n      marginRight: \"90px\"\n    },\n    paper2: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      backgroundColor: \"lightgreen\",\n      fontWeight: \"bold\"\n    },\n    paper3: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      color: theme.palette.text.primary,\n      backgroundColor: \"lightgreen\",\n      fontWeight: \"bold\"\n    },\n    pillGrid: {\n      textAlign: \"center\",\n      color: theme.palette.text.primary,\n      backgroundColor: \"lightgreen\",\n      fontWeight: \"bold\",\n      fontSize: \"16px\"\n    },\n    pillGrid2: {\n      textAlign: \"left\",\n      color: black,\n      fontWeight: \"bold\",\n      fontSize: \"14px\",\n      width: \"30%\"\n    },\n    pillGridCell: {\n      textAlign: \"left\",\n      color: black,\n      fontWeight: \"bold\",\n      fontSize: \"14px\",\n      width: \"21.5%\"\n    },\n  }));\n\n\n  const quarterOne = {backgroundColor: \"white\"}\n  const quarterTwo = {backgroundColor: \"green\"}\n  const quarterThree = {backgroundColor: \"yellow\"}\n  const quarterFour = {backgroundColor: \"orange\"}\n  const takeNow = {backgroundColor: \"red\"}\n\n  const bgColor = () => {\n      if(props.currentQuarter===\"quarterOne\"){\n          return {backgroundColor: \"white\"}\n      } else if(props.currentQuarter===\"quarterTwo\"){\n        return {backgroundColor: \"green\"}\n    } else if(props.currentQuarter===\"quarterThree\"){\n        return {backgroundColor: \"yellow\"}\n    } else if(props.currentQuarter===\"quarterFour\") {\n        return({backgroundColor:\"orange\"})\n    } else if(props.currentQuarter===\"eatNow\"){\n        return {backgroundColor: \"red\"}\n    }\n  }\n  const x = bgColor()\n  console.log(x)\n\n  const combine = (quarter) => {\n    return(`myStyle.${quarter}`)\n  }\n\n  const classes = useStyles(x);\n\n  return (\n    <div>\n      <TableRow className={`${classes.pillGrid3} ${classes.foo}`}>\n        <TableCell className={classes.pillGrid2} >\n          {props.name}\n        </TableCell>\n        <TableCell className={classes.pillGrid2} >\n          {props.lastTakenDate}\n        </TableCell>\n        <TableCell className={classes.pillGrid2} >\n          {props.lastTakenTime}\n        </TableCell>\n        <TableCell className={classes.pillGrid2} >\n          {props.frequency}\n        </TableCell>\n        <TableCell className={classes.pillGrid2} >\n          <Button variant=\"outlined\">\n            <TrashIcon onClick={() => props.handleDrugRemove(props.id)}></TrashIcon>\n          </Button>\n        </TableCell>\n        <TableCell className={classes.pillGridCell}>\n          <Button variant=\"outlined\">\n            <CheckIcon\n              onClick={() => props.handleDrugTaken(props.id)}\n            ></CheckIcon>\n          </Button>\n        </TableCell>\n      </TableRow>\n    </div>\n  );\n};\nexport default ActiveDrugs;\n","import Modal from \"../components/DrugModal\";\nimport ActiveDrugs from \"./ActiveDrugs\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport API from \"../utils/API\";\nimport Auth from \"../utils/Auth\";\nimport { Table, TableBody, TableRow } from \"material-ui/Table\";\nimport TableCell from \"@material-ui/core/TableCell\";\nconst moment = require(\"moment\");\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },  \n  addDrug: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.primary,\n    // backgroundColor: theme.palette.text.hint,\n    backgroundColor: \"seagreen\",\n    color: \"white\",\n    fontWeight: \"900\",\n    align: \"left\",\n    overflow: \"auto\",\n    fontFamily: \"Comic Sans MS, Comic Sans, cursive\"\n  },\n  title: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    backgroundColor: \"#23395d\",\n    color: \"white\",\n    fontWeight: \"800\",\n    fontSize: \"30px\",\n    fontFamily: \"Constantia\",\n  },\n  title2: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    backgroundColor: \"#23395d\",\n    color: \"white\",\n    fontWeight: \"800\",\n    fontSize: \"30px\",\n    fontFamily: \"Constantia\",\n    margin: \"5%\"\n  },\n  title3: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: \"white\",\n    fontWeight: \"800\",\n    fontSize: \"30px\",\n    fontFamily: \"Constantia\",\n  },\n  pillGrid2: {\n    textAlign: \"left\",\n    color: \"midnightblue\",\n    fontWeight: \"bold\",\n    fontSize: \"14px\",\n    width: \"20.5%\",\n  },\n  removeCheckbox: {\n    displayRowCheckbox: \"false\"\n  },\n  modal: {}\n}));\n\nexport default function AddDrug() {\n  const classes = useStyles();\n  const [user, setUser] = useState({});\n  const [drugDetails, setDrugDetails] = useState({});\n  const [open, setOpen] = useState(false);\n  const [allDrugs, setAllDrugs] = useState([]);\n  const [addedDrug, setAddedDrug] = useState(\"\");\n  const [drugQuarter, setDrugQuarter] = useState([]);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // const handleTableRowColor = () => {\n  //   setTableRowColor(\"red\");\n  // }\n\n  useEffect(() => {\n    const loadData = async () => {\n      let currentUser = await API.dashboard(Auth.getToken());\n      setUser(currentUser.data.user);\n      console.log(currentUser);\n      let currentDrugs = await API.getAllUserDrugs(\n        currentUser.data.user._id,\n        Auth.getToken()\n      );\n      console.log(currentDrugs);\n      setAllDrugs(currentDrugs.data)\n      API.saveDrugtoUser(currentUser.data, Auth.getToken())\n        .then(res => console.log(res))\n        .catch(err => console.log(err))\n      let finalDrugArray = await updatingallDrugs(currentDrugs.data)\n      setDrugQuarter(finalDrugArray)\n    }\n\n    loadData();\n  }, [addedDrug]);\n\n\n\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    setDrugDetails({ ...drugDetails, [name]: value });\n    console.log(drugDetails);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    console.log(\"Drug Details: \",\n      drugDetails.lastTakenDate,\n      drugDetails.lastTakenTime,\n      drugDetails.frequency\n    );\n    if (drugDetails.lastTakenDate && drugDetails.frequency && drugDetails.lastTakenTime) {\n      console.log(\"before API front end\")\n      console.log(\"current user, \", user._id)\n      API.saveDrug(\n        {\n          name: drugDetails.name,\n          lastTakenDate: drugDetails.lastTakenDate,\n          lastTakenTime: drugDetails.lastTakenTime,\n          frequency: parseInt(drugDetails.frequency),\n          user: user._id\n        },\n        Auth.getToken()\n      )\n        .then(res => {\n          console.log(res);\n          setAddedDrug(allDrugs.length + 5);\n        })\n        .then(res => handleClose())\n        // .then(res => handleTableRowColor())\n        .catch(err => console.log(err));\n    }\n  };\n\n  const handleDrugRemove = id => {\n    API.removeDrug(id, Auth.getToken())\n      .then(res => {\n        setAddedDrug(allDrugs.length);\n      })\n      .catch(err => console.log(err));\n  };\n  let count = 0\n\n  const handleLastTakenBtn = (id) => {\n    let currentTime = moment().format()\n    let timeArray = currentTime.split(\"T\");\n    let currentDate = timeArray[0]\n    let currentTimeArray = timeArray[1].split(\":\")\n    let presentHourMin = `${currentTimeArray[0]}:${currentTimeArray[1]}`\n    API.drugTaken(id,{\n      lastTakenDate: currentDate,\n      lastTakenTime: presentHourMin\n    },Auth.getToken())\n      .then(res => {\n        setAddedDrug(count++)\n      })\n      .catch(err => console.log(err))\n  }\n\n  //all tracker related functions\n  \n  const getDrugTime = async (drugData) => {\n    const drugT = await drugData.map(drug => ({\n      id: drug._id,\n      combinedTime: `${drug.lastTakenDate} ${drug.lastTakenTime}`,\n      frequency: parseInt(drug.frequency)\n    }))\n    console.log(drugT);\n    const allFutureDrug = await drugT.map(drug => ({\n      id: drug.id,\n      prediction: futureTimeCalcuation(drug.combinedTime,drug.frequency)\n    }))\n    return(allFutureDrug);\n  }\n  const compareTime = async(drugData) => {\n    const currentTime = moment().format('YYYY-MM-DD hh:mm a');\n    let myFutureTime = await getDrugTime(drugData);\n    console.log(\"Current time: \", currentTime)\n    console.log(myFutureTime);\n    let drugQuarter = await myFutureTime.map(drug => {\n      let quarterOneMet =  moment(currentTime).isBefore(drug.prediction[0])\n      let quarterTwoMet =  moment(currentTime).isBetween(drug.prediction[0],drug.prediction[1],\"minutes\",\"[)\")\n      let quarterThreeMet =  moment(currentTime).isBetween(drug.prediction[1],drug.prediction[2],\"minutes\",\"[)\")\n      let quarterFourMet =  moment(currentTime).isBetween(drug.prediction[2],drug.prediction[3],\"minutes\",\"[)\")\n      let timesUp =  moment(currentTime).isBetween(drug.prediction[3],currentTime,\"minutes\",\"[]\")\n      console.log(drug.id)\n      console.log(\"Quarter 1 Met: \", quarterOneMet)\n      console.log(\"Quarter 2 Met: \", quarterTwoMet)\n      console.log(\"Quarter 3 Met: \", quarterThreeMet)\n      console.log(\"Quarter 4 Met: \", quarterFourMet)\n\n      if(quarterOneMet) {\n        return \"quarterOne\"\n      }else if(quarterTwoMet) {\n        return \"quarterTwo\"\n      } else if (quarterThreeMet) {\n        return \"quarterThree\"\n      } else if (quarterFourMet) {\n        return \"quarterFour\"\n      } else if (timesUp) {\n        return \"eatNow\"\n      }\n    })\n    return(drugQuarter)\n    \n  }  \n  const updatingallDrugs = async (drugsData) => {\n    let finalDrugs = []\n    await compareTime(drugsData)\n    .then(res => {\n    finalDrugs = drugsData.map((drug, index)=> ({ ...drug, currentQuarter: res[index] }));\n    }).catch(err=> console.log(err))\n    console.log(\"FINALLLLL: \", finalDrugs)\n    return finalDrugs\n  }\n  \n  // updatingallDrugs().then(res => console.log(res));\n\n  const futureTimeCalcuation = (initialTime,frequency) => {\n    \n    const quarterFreq = hourToMinConverter(frequency/4);\n    console.log(quarterFreq)\n\n    const futurePrediction = []\n\n    let firstQuarter = momentCalculation(initialTime,quarterFreq)\n    console.log(\"First Q: \", typeof firstQuarter)\n    futurePrediction.push(firstQuarter)\n\n    let secondQuarter = momentCalculation(firstQuarter,quarterFreq)\n    console.log(\"Added min 2: \", secondQuarter)\n    futurePrediction.push(secondQuarter)\n\n    let thirdQuarter = momentCalculation(secondQuarter,quarterFreq)\n    console.log(\"Added min 3: \", thirdQuarter);\n    futurePrediction.push(thirdQuarter)\n    let takeNow = momentCalculation(thirdQuarter,quarterFreq)\n    console.log(\"Take now: \", takeNow);\n    futurePrediction.push(takeNow);\n    console.log(\"Future Prediction :\", futurePrediction);\n    \n    return futurePrediction;\n  }\n  \n  const momentCalculation = (time, frequency) => {\n    let futureTime = moment(time).add(frequency, \"minutes\").format('YYYY-MM-DD hh:mm a')\n    return futureTime;\n  }\n\n\n  const hourToMinConverter = (hour) => {\n    const min = (hour - Math.floor(hour))*60;\n    const hr = Math.floor(hour)*60;\n    const totalMin = hr + min;\n    return totalMin;\n  }\n\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} className={classes.title2}>\n          <Paper className={classes.title}>My Pills Tracker</Paper>\n          <Table>\n            <TableBody displayRowCheckbox={false}>\n              <TableRow>\n                <TableRow>\n                  <TableCell className={classes.pillGrid2}>\n                    Pill Name\n                    </TableCell>\n                  <TableCell className={classes.pillGrid2}>\n                    Last Date\n                    </TableCell>\n                  <TableCell className={classes.pillGrid2}>\n                    Last Time\n                    </TableCell>\n                  <TableCell className={classes.pillGrid2}>\n                    Frequency (hours)\n                    </TableCell>\n                  <TableCell className={classes.pillGrid2}>Delete?</TableCell>\n                  <TableCell className={classes.pillGrid2}>\n                    Take Pill\n                    </TableCell>\n                </TableRow>\n                {drugQuarter.map(drug => (\n                  <ActiveDrugs\n                    id={drug._id}\n                    key={drug._id}\n                    name={drug.name}\n                    frequency={drug.frequency}\n                    lastTakenDate={drug.lastTakenDate}\n                    lastTakenTime={drug.lastTakenTime}\n                    handleDrugRemove={handleDrugRemove}\n                    handleDrugTaken={handleLastTakenBtn}\n                    currentQuarter={drug.currentQuarter}\n                  />\n                ))}\n              </TableRow>\n            </TableBody>\n          </Table>\n        </Grid>\n        <Grid item xs={3} className={classes.title3}>\n          <Modal\n            className={classes.modal}\n            name={\"Drug 1\"}\n            user_id={user._id}\n            handleInputChange={handleInputChange}\n            handleFormSubmit={handleFormSubmit}\n            handleOpen={handleOpen}\n            handleClose={handleClose}\n            open={open}\n          />\n        </Grid>\n        <Grid item xs={4}></Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport getMuiTheme from \"material-ui/styles/getMuiTheme\";\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport HomePage from \"./components/HomePage\";\nimport { PrivateRoute, PropsRoute, LoggedOutRoute } from \"./components/Routes\";\nimport LoginPage from \"./pages/Login\";\nimport LogoutFunction from \"./pages/LogoutFunction\";\nimport SignUpPage from \"./pages/Signup\";\nimport DashboardPage from \"./pages/DashboardPage\";\nimport Auth from \"./utils/Auth\";\nimport SearchV2 from './pages/Search2.0'\nimport { motion } from \"framer-motion\";\nimport \"./nav.css\";\nimport AddDrug from \"./components/AddDrug\";\nimport './index.css';\nimport PillsIcon from \"./images/pillsIcon.png\"\n\n// remove tap delay, essential for MaterialUI to work properly\n\nconst App = () => {\n  const [authenticated, setAuthenticate] = useState(false);\n\n  useEffect(() => {\n    toggleAuthenticateStatus();\n  }, []);\n\n  const toggleAuthenticateStatus = () => {\n    // check authenticated status and toggle state based on that\n    setAuthenticate(Auth.isUserAuthenticated());\n  };\n\n  return (\n    <div className=\"body\">\n      <MuiThemeProvider muiTheme={getMuiTheme()}>\n        <Router>\n          <div className=\"appBar\">\n            {authenticated ? (\n              <div>\n                <img\n                  src={PillsIcon}\n                  className=\"navTitle\"\n                  alt=\"Druggler Icon\"\n                  height=\"30px\"\n                  width=\"50px\"\n                  style={{ margin: \"0px\", marginTop: \"20px\" }}></img>\n                <div className=\"navTitle\" style={{ margin: \"0px\" }}>Druggler</div>\n                <img\n                  src={PillsIcon}\n                  className=\"navTitle\"\n                  alt=\"Druggler Icon\"\n                  height=\"30px\"\n                  width=\"50px\"\n                  style={{ margin: \"0px\", marginTop: \"20px\" }}></img>\n                <div>\n                  <Link\n                    className=\"navButton\"\n                    to=\"/logout\"\n                    color=\"error\"\n                  >\n                    {\" \"}\n                    Log out{\" \"}\n                  </Link>\n                </div>\n\n                <div>\n                  <Link\n                    className=\"navButton\"\n                    to=\"/dashboard\"\n                  >\n                    {\" \"}My Pills{\" \"}\n                  </Link>\n                </div>\n                <div>\n                  <Link\n                    className=\"navButton\"\n                    to=\"/interactions\"\n                  >\n                    {\" \"}Interactions{\" \"}\n                  </Link>\n                </div>\n              </div>\n            ) : (\n                <div>\n                  <img\n                    src={PillsIcon}\n                    className=\"navTitle\"\n                    alt=\"Druggler Icon\"\n                    height=\"30px\"\n                    width=\"50px\"\n                    style={{ marginTop: \"20px\" }}></img>\n                  <div className=\"navTitle\" >Druggler</div>\n                  <img\n                    src={PillsIcon}\n                    className=\"navTitle\"\n                    alt=\"Druggler Icon\"\n                    height=\"30px\"\n                    width=\"50px\"\n                    style={{ marginTop: \"20px\" }}></img>\n                </div>\n              )}\n          </div>\n          {/* <NavSpacer /> */}\n\n          <PropsRoute\n            exact\n            path=\"/\"\n            component={HomePage}\n            toggleAuthenticateStatus={toggleAuthenticateStatus}\n          />\n\n          {/* <PrivateRoute path=\"/dashboard\" component={DashboardPage} /> */}\n          <PrivateRoute path=\"/dashboard\" component={AddDrug} />\n          <PrivateRoute path=\"/interactions\" component={SearchV2} />\n\n          {/* <PrivateRoute path=\"/mypills\" component={AddDrug} /> */}\n\n          <LoggedOutRoute\n            path=\"/login\"\n            component={LoginPage}\n            toggleAuthenticateStatus={toggleAuthenticateStatus}\n          />\n\n          <LoggedOutRoute path=\"/signup\" component={SignUpPage} />\n          <Route path=\"/logout\" component={LogoutFunction} />\n        </Router>\n\n        {/* <div>\n        <Router>\n          <Switch>\n            Route exact path =\"/\"\n          </Switch>\n        </Router>\n      </div> */}\n\n        {/* <Search /> */}\n        {/* <AddDrug /> */}\n      </MuiThemeProvider>\n    </div>\n  );\n};\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/pillsIcon.c235a917.png\";"],"sourceRoot":""}